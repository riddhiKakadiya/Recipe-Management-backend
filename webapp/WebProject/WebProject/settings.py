"""
Django settings for WebProject project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import configparser
import logging.config

try:
    HOSTNAME = socket.gethostname()
except:
    HOSTNAME = 'localhost'

ENV_DJANGO_PROFILE = os.environ.get('DJANGO_PROFILE')
ENV_MARIADB_USERNAME = os.environ.get('MARIADB_USERNAME')
ENV_MARIADB_PASSWORD = os.environ.get('MARIADB_PASSWORD')
ENV_MARIADB_DATABASE = os.environ.get('MARIADB_DATABASE')
ENV_MARIADB_HOST = os.environ.get('MARIADB_HOST')
ENV_MARIADB_PORT = os.environ.get('MARIADB_PORT')
ENV_BUCKET_NAME = os.environ.get('BUCKET_NAME')
ENV_ELASTICSEARCH_HOST = os.environ.get('ELASTICSEARCH_HOST')
ENV_ELASTICSEARCH_PORT = os.environ.get('ELASTICSEARCH_PORT')
ENV_AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
ENV_AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


STATSD_HOST = 'localhost'
STATSD_PORT = 8125
STATSD_PREFIX = 'statsd'
STATSD_MAXUDPSIZE = 512

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'l_k3zyn7$2j*vsvk&m3t5&*bp++r*=v*$c9gmoiy9z0xk5u_6m'

# SECURITY WARNING: don't run with debug turned on in production!
if ENV_DJANGO_PROFILE=="local":
    DEBUG = True
else:
    DEBUG=False
DEBUG=True
ALLOWED_HOSTS = ['*']

# Define whether to run in dev environment or default(local) environment

# Application definition

STATSD_PATCHES = [
        'django_statsd.patches.db',
        'django_statsd.patches.cache',
]

INSTALLED_APPS = [
    'user_auth',
    'django_statsd',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_truncate',
]

MIDDLEWARE = [
    'django_statsd.middleware.GraphiteRequestTimingMiddleware',
    'django_statsd.middleware.GraphiteMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'user_auth.middleware.PutParsingMiddleware',
    'user_auth.middleware.JSONParsingMiddleware',
]

ROOT_URLCONF = 'WebProject.urls'
#

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WebProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
DATABASES = {}

if ENV_DJANGO_PROFILE == "local":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': ENV_MARIADB_DATABASE,
            'USER': ENV_MARIADB_USERNAME,
            'PASSWORD': ENV_MARIADB_PASSWORD,
            'HOST': ENV_MARIADB_HOST,
            'PORT': ENV_MARIADB_PORT,
        }
    }
elif ENV_DJANGO_PROFILE == "cloud":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': ENV_MARIADB_DATABASE,
            'USER': ENV_MARIADB_USERNAME,
            'PASSWORD': ENV_MARIADB_PASSWORD,
            'HOST': ENV_MARIADB_HOST,
            'PORT': ENV_MARIADB_PORT,
        }
    }
elif ENV_DJANGO_PROFILE == "test":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
#Password to Bcrypt
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
]

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        'OPTIONS': {
            'user_attributes': (
                'username', 'password'
            ),
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 6,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

# USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'user_auth/attachments')
MEDIA_URL = '/attachments/'


LOGGING_CONFIG = None
logging.config.dictConfig({
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '{asctime} {levelname} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'default': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename' : '/var/log/csye7374.log',
            'formatter': 'standard'
        },
        'console': {
        'level': 'DEBUG',
        'filters': [],
        'class': 'logging.StreamHandler',
        'formatter': 'standard'
        }
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'propagate': True,
        }
    }
})
